name: Deploy App to ECS Fargate

on:
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

jobs:
  app-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Get ECR repo URL
        id: tfout
        working-directory: terraform
        run: echo "ecr_url=$(terraform output -raw ecr_repo_url)" >> $GITHUB_OUTPUT

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        working-directory: app
        env:
          ECR_REPO: ${{ steps.tfout.outputs.ecr_url }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building and pushing image..."
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REPO:$IMAGE_TAG

      - name: Terraform Apply (update service with new image)
        working-directory: terraform
        env:
          TF_VAR_image_url: ${{ steps.tfout.outputs.ecr_url }}:${{ github.sha }}
        run: terraform apply -auto-approve
